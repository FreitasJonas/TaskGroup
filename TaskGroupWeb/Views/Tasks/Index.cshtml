@model TaskGroupWeb.Models.ProjectModel
@using TaskGroupWeb.Helpers

@{
    ViewData["Title"] = "Tarefas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css {
    <link href="~/lib/DataTables/css/jquery.dataTables.css" rel="stylesheet" />
    <link href="~/lib/DataTables/datatables.css" rel="stylesheet" />
    <link href="~/lib/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/css/datatable/custom.css" rel="stylesheet" />
}

<partial name="~/Views/Shared/_MessageResult.cshtml" />
<partial name="~/Views/Shared/_BreadCrumb.cshtml" />

<hr />

<p>
    <a asp-action="Create" asp-route-_projectId="@Model.projectId.EncryptUrl()" class="btn btn-success btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Cadastrar nova tarefa</span>
    </a>
</p>

    <!-- Dropdown Card Example -->
    <div class="card shadow mb-4">
        <!-- Card Header - Dropdown -->
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">
                <a href="#" class="btn btn-primary btn-sm">
                    <i class="fas fa-tasks"></i>
                </a> @Model.name ( @Model.tasks.Count() )
            </h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>

                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Ações:</div>

                    <a class="dropdown-item close-project" href="#"><i class="fas fa-times-circle fa-sm fa-fw text-gray-400"></i> Fechar Projeto</a>

                    <div class="dropdown-divider"></div>

                    @if (ViewBag.HasRepositoryLink)
                    {
                        <a class="dropdown-item" href="@Model.git" target="_blank"> <i class="fas fa-code-branch fa-sm fa-fw text-gray-400"></i> Ver no Git</a>
                    }
                    else
                    {
                        <a class="dropdown-item disabled" href="#"> <i class="fas fa-code-branch fa-sm fa-fw text-gray-400"></i> Ver no Git</a>
                    }


                </div>

            </div>
        </div>

        <div class="collapse show" id="@Model.name.Replace(" ", "_")">

            <!-- Card Body -->
            <div class="card-body">

                <div class="task-container">
                    <table id="table-tasks" class="table table-hover table-bordered compact" style="width:100%">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("TaskID")
                                </th>
                                <th>
                                    @Html.DisplayName("Código")
                                </th>
                                <th>
                                    @Html.DisplayName("Dono")
                                </th>
                                <th>
                                    @Html.DisplayName("Assunto")
                                </th>
                                <th>
                                    @Html.DisplayName("Descrição")
                                </th>
                                <th>
                                    @Html.DisplayName("Status")
                                </th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var task in Model.tasks)
                            {
                            <tr onclick="Redirect('@Url.Action("Edit", "Tasks", new { _taskId = task.taskId.EncryptUrl() })')">
                                <td>
                                    @task.taskId.ToString()
                                </td>
                                <td>
                                    @task.taskCode
                                </td>
                                <td>
                                    @task.userOwn.name
                                </td>
                                <td>
                                    @task.subject
                                </td>
                                <td>
                                    @task.description
                                </td>
                                <td>
                                    <div class="bg-status" style="background-color: @HtmlHelpers.TaskStatusColor(task.status)">
                                        <h6 class="card-title mb-1" style="color: #ffffff"> <i class="fa fa-@HtmlHelpers.TaskStatusIcon(task.status)" aria-hidden="true"></i> @task.status.ToString()</h6>
                                    </div>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>

    <br />

@section scripts {
    <script src="~/lib/DataTables/js/jquery.dataTables.js"></script>
    <script src="~/lib/DataTables/datatables.js"></script>
    <script src="~/lib/DataTables/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/js/DatatableConfig.js"></script>

    <script>
        $('.table').DataTable(getDataTableConfig());

        $('.close-project').click(function () {

            let projectId = '@Model.projectId.EncryptUrl()';
            ConfirmDefault("Tem certeza que desja fechar este projeto?", "Sim",
                function () {
                    let url = `/Tasks/CloseProject?_projectId=${projectId}`;

                    LoadingShow();

                    submitAssync(url, null,
                        function (response) {
                            console.log(response)
                            location.href = response.action;
                        },
                        function (response) {
                            console.log(response)
                            swal("", response.message)
                            LoadingHide();
                        })
                })
        })
    </script>
}
