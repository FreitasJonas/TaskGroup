@using TaskGroupWeb.Helpers
@model TaskGroupWeb.Models.TaskModel

@{
    ViewData["Title"] = "Tarefa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css {
    <link rel="stylesheet" href="~/lib/summer/summernote.css" />
    <link rel="stylesheet" href="~/lib/jquery-ui-1.12.1/jquery-ui.css" />
}

<partial name="~/Views/Shared/_MessageResult.cshtml" />
<partial name="~/Views/Shared/_BreadCrumb.cshtml" />

<hr />

<!-- Dropdown Card Example -->
<div class="card shadow mb-4">
    <!-- Card Header - Dropdown -->
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary"> <i class="fas fa-tasks"></i> Tarefa</h6>
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header">Ações:</div>

                @if (UserUtilities.UserIsTaskOwner(User.Claims, Model))
                {
                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#message-modal"><i class="fas fa-pencil-alt fa-sm fa-fw text-gray-400"></i> Escrever mensagem</a>
                    <a class="dropdown-item" href="#"><i class="fas fa-hand-holding fa-sm fa-fw text-gray-400"></i> Pegar tarefa</a>
                    <a class="dropdown-item" href="#"><i class="fas fa-stop-circle fa-sm fa-fw text-gray-400"></i> Pausar tarefa</a>
                    <a class="dropdown-item" href="#"><i class="fas fa-times-circle fa-sm fa-fw text-gray-400"></i> Fechar Tarefa</a>
                }
                else
                {
                    <a class="dropdown-item disabled" href="#" data-toggle="modal" data-target="#message-modal"><i class="fas fa-pencil-alt fa-sm fa-fw text-gray-400"></i> Escrever mensagem</a>
                    <a class="dropdown-item disabled" href="#"><i class="fas fa-hand-holding fa-sm fa-fw text-gray-400"></i> Pegar tarefa</a>
                    <a class="dropdown-item disabled" href="#"><i class="fas fa-stop-circle fa-sm fa-fw text-gray-400"></i> Pausar tarefa</a>
                    <a class="dropdown-item disabled" href="#"><i class="fas fa-times-circle fa-sm fa-fw text-gray-400"></i> Fechar Tarefa</a>
                }

                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#"> <i class="fas fa-code-branch fa-sm fa-fw text-gray-400"></i> Ver no Git</a>
            </div>
        </div>
    </div>
    <!-- Card Body -->
    <div class="card-body">
        <div class="row">
            <div class="col-md-9">

                @if (UserUtilities.UserIsTaskOwner(User.Claims, Model) && Model.status != Objetos.DbEnumerators.TaskStatus.Finalizado)
                {
                    <div id="alert-message" hidden>
                        <p class="alert alert-danger" id="alert-message-text"></p>
                    </div>

                    <form asp-action="SendMessage" id="form-message" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <textarea id="summer" name="message"></textarea>

                        <button class="btn btn-primary" type="submit" style="margin-top:10px;">Enviar</button>
                    </form>                   
                }
                else
                {
                    <textarea id="summer" disabled></textarea>
                    <button class="btn btn-primary" disabled style="margin-top: 10px;">Enviar</button>
                }

                <br />
                <br />

                @if (Model.messages.Count() == 0)
                {
                    <!-- Basic Card Example -->
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Mensagens</h6>
                        </div>
                        <div class="card-body">
                            Nenhuma mensagem encontrada!
                        </div>
                    </div>
                }
                else
                {
                    @foreach (var message in Model.messages)
                    {
                        <!-- Basic Card Example -->
                        <div class="card shadow mb-4">
                            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                <h6 class="m-0 font-weight-bold text-primary"> <i class="fas fa-user"></i> @message.user.name ( @message.user.login ) </h6>
                                <h6 class="m-0 font-weight-bold text-primary"> <i class="fas fa-calendar"></i> @message.dateCreated</h6>
                            </div>
                            <div class="card-body">
                                @Html.Raw(@message.message)
                            </div>
                        </div>
                    }
                }

            </div>

            <div class="col-md-3">

                <!-- Basic Card Example -->
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary"> <i class="fas fa-info"></i> Info</h6>
                    </div>
                    <div class="card-body">

                        <form asp-action="Edit" id="form-task">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <input asp-for="taskId" class="form-control" hidden />
                            </div>
                            <div class="form-group">
                                <input asp-for="projectId" class="form-control" hidden />
                            </div>
                            <div class="form-group">
                                <label asp-for="taskCode" class="control-label"></label>
                                <input asp-for="taskCode" class="form-control" readonly />
                                <span asp-validation-for="taskCode" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.userOwnId, new { @class = "control-label" })
                                <div class="input-size">
                                    @Html.DropDownList("userOwnId", ViewBag.Users as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.userOwnId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label asp-for="subject" class="control-label"></label>
                                <input asp-for="subject" class="form-control" readonly />
                                <span asp-validation-for="subject" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.status, new { @class = "control-label" })
                                <div class="input-size">
                                    @Html.DropDownList("status", ViewBag.Status as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label asp-for="description" class="control-label"></label>
                                <textarea asp-for="description" class="form-control" readonly></textarea>
                                <span asp-validation-for="description" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="dateSla" class="control-label"></label>
                                <input asp-for="dateSla" type="text" class="form-control" />
                                <span asp-validation-for="dateSla" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="dateCreated" class="control-label"></label>
                                <input asp-for="dateCreated" class="form-control" readonly />
                                <span asp-validation-for="dateCreated" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="dateFinaly" class="control-label"></label>
                                <input asp-for="dateFinaly" class="form-control" readonly />
                                <span asp-validation-for="dateFinaly" class="text-danger"></span>
                            </div>

                            <div class="form-group">

                                @if (UserUtilities.UserIsTaskOwner(User.Claims, Model) && Model.status != Objetos.DbEnumerators.TaskStatus.Finalizado)
                                {
                                    <button type="submit" class="btn btn-success btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-check"></i>
                                        </span>
                                        <span class="text">Salvar</span>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" disabled class="btn btn-success btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-check"></i>
                                        </span>
                                        <span class="text">Salvar</span>
                                    </button>
                                }

                                <br /><br />

                                <div>
                                    <a asp-action="Index" asp-route-_projectId="@Model.projectId.EncryptUrl()" class="btn btn-secondary btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-backward"></i>
                                        </span>
                                        <span class="text">Voltar a lista</span>
                                    </a>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<br />

@section scripts{
    <script src="~/lib/summer/summernote.js"></script>
    <script src="~/lib/jquery-ui-1.12.1/jquery-ui.js"></script>

    <script>

        $(document).ready(function () {
            let isOwn = '@UserUtilities.UserIsTaskOwner(User.Claims, Model)'

            if (isOwn == "False") {
                $('#form-task :input').attr('disabled', true)
            }

            $("#dateSla").datepicker(getDatePickerConfiguration());
            //$("#dateSla").datepicker('setDate', new Date());

            $('#summer').summernote({
                height: 200,
                popover: {
                    image: [],
                    link: [],
                    air: []
                }
            });
        })

        $('#form-task').submit(function (e) {

            e.preventDefault();

            var url = $(this).attr("action");
            let data = $(this).serializeArray();

            if($(this).valid()) {
                submitAssync(url, data,
                function (response) {
                    console.log(response)
                    window.location.href = response.action
                },
                function (response) {
                    console.log(response)
                    $('#alert-message').attr('hidden', false)
                    $('#alert-message-text').text(response.message);
                })
            }
            else {
                swal("", "Por favor preencha todos os campos obrigatórios!");
            }
        })

        $('#form-message').submit(function (e) {
            e.preventDefault();

            var url = $(this).attr("action");

            let data = $(this).serializeArray();
            data.push({ name: 'taskId', value: $('#taskId').val() });
            data.push({ name: 'message', value: $('#summer').val() });

            console.log(data)

            submitAssync(url, data,
                function (response) {
                    console.log(response)
                    window.location.href = response.action
                },
                function (response) {
                    console.log(response)
                    $('#alert-message').attr('hidden', false)
                    $('#alert-message-text').text(response.message);
                })
        })

        $('#message-modal').on('show.bs.modal', function (e) {
            $('#alert-message').attr('hidden', true)
        })

    </script>
}

