@model TaskGroupWeb.Models.ProjectModel

@{
    ViewData["Title"] = "Cadastrar projeto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<partial name="~/Views/Shared/_MessageResult.cshtml" />

<h2>@ViewData["Title"]</h2>

<hr />
<div class="row">
    <div class="col-md-5">
        <form asp-action="Create" id="form-project">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input asp-for="projectId" class="form-control" value="0" hidden />

            <div class="form-group">
                <label asp-for="name" class="control-label"></label>
                <input asp-for="name" class="form-control" />
                <span asp-validation-for="name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="description" class="control-label"></label>
                <input asp-for="description" class="form-control" />
                <span asp-validation-for="description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="_git" class="control-label"></label>
                <input asp-for="_git" class="form-control" />
                <span asp-validation-for="_git" class="text-danger"></span>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.status, new { @class = "control-label" })
                <div class="input-size">
                    @Html.DropDownList("status", ViewBag.Status as IEnumerable<SelectListItem>, new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.framework, new { @class = "control-label" })
                <div class="input-size">
                    @Html.DropDownList("framework", ViewBag.FrameWorks as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.framework, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-success btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-check"></i>
                    </span>
                    <span class="text">Salvar</span>
                </button>
            </div>

        </form>
    </div>

    <div class="col-md-5">

        <div class="form-group">
            <label class="control-label">
                <a href="#" data-toggle="tooltip" data-placement="top" title="Usuários que participarão deste projeto!">
                    <i class="fa fa-question faa-float animated"></i>
                </a>

                Participantes

            </label>
            <div>
                @Html.DropDownList("usersSubscribe", ViewBag.Users as IEnumerable<SelectListItem>, new { @class = "form-control" })
            </div>

            <br />

            <div class="_task-container">
                <button type="submit" class="btn btn-primary btn-icon-split" id="btnAdd">
                    <span class="icon text-white-50">
                        <i class="fas fa-hand-rock"></i>
                    </span>
                    <span class="text">Adicionar</span>
                </button>
            </div>

            <div>
                <br>
                <ul id="usersSelected"></ul>
            </div>

        </div>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-backward"></i>
        </span>
        <span class="text">Voltar a lista</span>
    </a>
</div>

@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/js/Views/Projects/ProjectUsersSelect.js"></script>

    <script>
        $('#form-project').submit(function (e) {
            e.preventDefault();

            let url = $(this).attr('action')
            let data = $(this).serializeArray();
            let usersSubscribe = [];

            if ($(this).valid()) {

                $('#usersSelected li').each(function (i) {
                    usersSubscribe.push($(this).attr("data-userId"));
                })

                if (usersSubscribe.length == 0) {
                    swal("", "É necessário selecionar os participantes do projeto!");
                }
                else {

                    LoadingShow();

                    data.push({ name: "usersSubscribeId", value: usersSubscribe.join(";") })

                    submitAssync(url, data,
                        function (response) {
                            window.location.href = response.action
                        },
                        function (response) {
                            LoadingHide();
                            swal("", response.message)
                        })
                }
            }
        })
    </script>
}
